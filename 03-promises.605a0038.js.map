{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASC,cAAc,gBACjCE,EAASH,SAASC,cAAc,eAChCG,EAAWJ,SAASC,cAAc,iBAIlCI,EAAQL,SAASC,cAAc,iBACrCI,EAAMC,aAAa,WAAY,IAC/BP,EAAOQ,iBAAiB,SAExB,WACE,GAAIC,OAAON,EAAQO,OAAS,GAAKD,OAAOL,EAAOM,OAAS,GAAKD,OAAOJ,EAASK,QAAU,EAErF,YADAC,EAAAb,GAASc,OAAOC,KAAK,mCAGtBP,EAAMQ,gBAAgB,W,IAGzBd,EAAOQ,iBAAiB,UAExB,SAA2BO,GACzBA,EAAMC,iBAKJ,IAJF,IAAIC,EAAaR,OAAON,EAAQO,OAC5BQ,EAAYT,OAAOL,EAAOM,OAC1BS,EAASV,OAAOJ,EAASK,OAElBU,EAAI,EAAGA,GAAKD,EAAQC,IAC3BC,EAAcD,EAAGH,GACdK,MAAK,SAAAC,G,OAAWZ,EAAAb,GAASc,OAAOY,QAAQD,E,IACxCE,OAAM,SAAAC,G,OAAUf,EAAAb,GAASc,OAAOe,QAAQD,E,IAC3CT,GAAcC,C,IAKpB,IAAMG,EAAgB,SAACO,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACP,EAASG,GAC3B,IAAMK,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFR,EAAQ,uBAAwCY,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEpDH,EAAK,sBAAqCS,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,GAEnDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formEl = document.querySelector(\"form\");\nconst delayEl = document.querySelector(\"[name=delay]\");\nconst stepEl = document.querySelector(\"[name=step]\");\nconst amountEl = document.querySelector(\"[name=amount]\");\n\n\n//    ПЕРЕВІРКА ВВЕДЕНИХ ДАНИХ В ІНПУТ\nconst btnEl = document.querySelector(\"[type=submit]\");\nbtnEl.setAttribute(\"disabled\", \"\");\nformEl.addEventListener(\"input\", checkInputValue);\n\nfunction checkInputValue() {\n  if (Number(delayEl.value) < 0 || Number(stepEl.value) < 0 || Number(amountEl.value) <= 0) {\n    Notiflix.Notify.info(\"Value can`t be negative or zero\");\n    return;\n  }\n   btnEl.removeAttribute(\"disabled\");\n}\n\nformEl.addEventListener(\"submit\", handlerFormSubmit);\n\nfunction handlerFormSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  let stepValue = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, delayValue)\n        .then(resolve => Notiflix.Notify.success(resolve))\n        .catch(reject => Notiflix.Notify.failure(reject));\n      delayValue += stepValue;\n    }\n  \n}\n\nconst createPromise = (position, delay) => {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$btnEl","setAttribute","addEventListener","Number","value","$parcel$interopDefault","Notify","info","removeAttribute","event","preventDefault","delayValue","stepValue","amount","i","$ce04d3a99e08e73b$var$createPromise","then","resolve","success","catch","reject","failure","position","delay","Promise","shouldResolve","Math","random","setTimeout","concat"],"version":3,"file":"03-promises.605a0038.js.map"}